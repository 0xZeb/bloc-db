#### Exercises

> 1.How do you find related data held in two separate data tables?

An inner join would link information together and return it in a new table.

> 2.Explain, in your own words, the difference between an INNER JOIN, LEFT OUTER JOIN, and RIGHT OUTER JOIN. Give a real-world example for each.

Inner join- returning a new table with results from queried tables that have related data.
An example would be querying student database tables to find out who has enrolled and has not paid their tuition.

Left outer join- returns a new table like an inner join, but also includes each row from the first table. An example would be returning each row in the first table and any related data in the second table. So querying every student at a school and seeing who is staying on campus.

Right outer join- returns a new table containing the common rows from both tables as well as
each existing row in the second table. An example would be a car dealership querying up their inventory
of cars that are used and under 25k dollars and also the mileage for every used car.

> 3.Define primary key and foreign key. Give a real-world example for each.

Primary keys are unique identifiers that occur once in a table. Foreign keys are
essential to joining tables as they act as unique identifiers also, but on a different table.
If you are talking about a database of students, each is assigned a unique id number. They may have
other information on a separate table you would like to link, so you make sure that your statements
link the different tables together along those corresponding identifiers.

> 4.Define aliasing.

Aliasing is using short-hand or abbreviations in your statements to represent tables.

> 5.Change this query so that you are using aliasing:
SELECT professor.name, compensation.salary,
compensation.vacation_days FROM professor JOIN
compensation ON professor.id =
compensation.professor_id;

SELECT p.name, c.salary,
c.vacation_days FROM professor as p
JOIN compensation AS c ON p.id =
c.professor_id;


> 6.Why would you use a NATURAL JOIN? Give a real-world example.

NATURAL is another short-hand way of representing something much longer. It implies
all common columns be included from both tables.

> 7.Using this Employee schema and data, write queries to find the following information:
List all employees and all shifts.

SELECT * FROM employees;

SELECT * FROM shifts;


> 8.Using this Adoption schema and data, please write queries to retrieve the following information and include the results:

-Create a list of all volunteers. If the volunteer is fostering a dog, include each dog as well.

SELECT volunteers.first_name, volunteers.last_name, dogs.name
FROM  volunteers
LEFT OUTER JOIN dogs
ON  volunteers.foster_dog_id = dogs.id;




The cat's name, adopter's name, and adopted date for each cat adopted within the past month to be displayed as part of the "Happy Tail" social media promotion which posts recent successful adoptions.
Create a list of adopters who have not yet chosen a dog to adopt.
Lists of all cats and all dogs who have not been adopted.
The name of the person who adopted Rosco.

> 8.Using this Library schema and data, write queries applying the following scenarios and include the results:

To determine if the library should buy more copies of a given book, please provide the names and position, in order, of all of the patrons with a hold (request for a book with all copies checked out) on "Advanced Potion-Making".
List all of the library patrons. If they have one or more books checked out, list the books with the patrons.
